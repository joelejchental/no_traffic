name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  RUN_ID: ${{ github.run_id }}

jobs:
  test:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Inject run ID & Start Docker Compose
      run: |
        sed -i "s/MY_RUN_ID/${{ github.run_id }}/g" docker-compose.yml
        docker-compose up --build --abort-on-container-exit

    - name: Save API Image
      run: docker save my-api-image-${{ github.run_id }} -o api-image.tar

    - name: Upload API Image Artifact
      uses: actions/upload-artifact@v3
      with:
        name: api-image
        path: api-image.tar

    - name: Save Test Image
      run: docker save my-test-image-${{ github.run_id }} -o test-image.tar

    - name: Upload Test Image Artifact
      uses: actions/upload-artifact@v3
      with:
        name: test-image
        path: test-image.tar

    - name: Upload pytest results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: pytest-results
        path: tests/.pytest_cache/
